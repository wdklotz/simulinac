# Copyright 2015 Wolf-Dieter Klotz <wdklotz@gmail.com>
# This file is part of the SIMULINAC code

# SIMULINAC is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.

# SIMULINAC is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with SIMULINAC.  If not, see <http://www.gnu.org/licenses/>.

#..........................................................................................
# Input file for FODO linac simulator
# Input file follows YAML syntax (http:\\http://yaml.org/)
#
# Note:
#   Repeated nodes are initially denoted by an ampersand ( & )
#   and thereafter referenced with an asterisk ( * ).

#...................................................:.......................................
DESCRIPTOR:  "FODO ohne Bend"
#..........................................................................................
## RUN switches
#..........................................................................................
FLAGS:
    accON:        False           # {True} accSeleration on/off flag
    # egf:          True            # {False} emittance growth flag
    # sigma:        False             # {True} beam sizes by sigma-matrix
    # KVout:        True            # {False} print a dictionary of Key-Value pairs, no display
    # periodic:     True            # {False} treat lattice as ring
    # useaper:      True            # {False} use aperture check for lattice elements
    # csTrak:       False           # {True} plot CS trajectories
    # bucket:       True            # {False} plot the bucket
    maction:      True            # {False} call marker actions
    verbose:      3                 # {0} print flag (0 = minimal print), try 0,1,2,3
#...........................................................................................
## INPUT-PARAMETER definitions
#...........................................................................................
PARAMETERS:
    Tkin:                 50.0            # [MeV] energy @ injection 
    DT2T:                 6.0e-3          # delta-T/T kinetic energy spread @ injection
    # frequency:    &freq   816.e6          # [Hz] frequency
    emitx_i:      &emx    1.e-6           # [m*rad] {x,x'} emittance @ entrance
    emity_i:      &emy    1.e-6           # [m*rad] {y,y'} emittance @ entrance
    betax_i:      &btx    1.902           # [m] twiss beta @ entrance x
    betay_i:      &bty    0.351           # [m] twiss beta @ entrance y
    alfax_i:              0.000           # [] twiss alpha x @ entrance
    alfay_i:              0.000           # [] twiss alpha y @ entrance
    ql:           &p03    0.05            # [m] 1/2 quad-length
    quad_bore:    &p04    11.e-3          # [m] quad bore radius
    # phi_sync:     &phs    -20.            # [deg] synchronous phase
    # windings:             30              # [] quad-coil windings
    # gap:          &p15    0.044           # [m] RF gap
    BgradL:       &bgrad1 25.0            # [T/m]
    BgradH:       &bgrad2 25.0            # [T/m]
    thins:        &ths    1               # if thins == 0|1: one thick element else: many thin elements
    # EzPeak:       &p17    2.5             # [MV/m] peak gap field Strengy
    nbsigma:              2               # [m] sigma aperture
    aperture:     &aper   11.e-3          # [m] global aperture radius setting (default = None)
    lattvers:     'FODO ohne Bend'     # lattice version: IN 5, out 200
    # mapping:      &map    base             # [t3d, simple, oxal, base, ttf, dyn]
    mapping:      &map    t3d             # [t3d, simple, oxal, base, ttf, dyn]
#...........................................................................................
## ELEMENTS (a.k.a. NOdes) definitions
#...........................................................................................
ELEMENTS:
#...........................................................................................
# Nodes
#...........................................................................................
    D:                        # ID
        type:     D            # D class
        length:   0.500        # [m]
    QF:                        # ID
        type:     QF           # QF class
        length:   *p03         # [m]
        aperture: *aper        # [m] aperture radius
        B':       *bgrad1      # [T/m] quadrupole gradient
        thins:    *ths         # if thins == 0|1: one thick element else: many thin elements
        # sec:      LE           # section 
    QD:                        # ID
        type:     QD           # QF class
        length:   *p03         # [m]
        aperture: *aper        # [m] aperture radius
        B':       *bgrad1      # [T/m] quadrupole gradient
        thins:    *ths         # if thins == 0|1: one thick element else: many thin elements
        # sec:      LE           # section 
    Psp:                       # ID   (simu.py marker)
        type:     MRK          # MRK class
        action:   pspace       # phase space marker actions
        active:   True         # {False} action activated
    Pcc:                       # ID   (tracker.py marker)
        type:     MRK          # MRK class
        action:   pcrcut       # Pointcare cut
        active:   True         # action activated
        # prefix:   frames     # base dir of frames
        abscissa: z            # x axis
        ordinate: zp           # y axis
# ...........................................................................................
# ...........................................................................................
# ...........................................................................................
# LATTICE definition starts here:  
# Node is part of Segment is part of Cell is part of Section is part of LINE
# LATTICE is LINE
# ===========================================================================================
SEGMENTS:   
    NIL_SEG:     [1,[]]
# group ELEMENTs into SEGMENTs:
# Syntax: [number[node,...,node]]
# the nested list [node,...,node] is repeated number times
#...........................................................................................
# Markers
    Mkrs:                [1,[Psp,Pcc]]
# LE section segment
    # SGLi:                [1,[QF1, D3]]               # QF+D
    # SGLm:                [1,[D3, QD1, QD1, D3]]      # D+QD+QD+D
    # SGLf:                [1,[D3, QF1]]               # D+QF
# HE section segment
    # SGHi:                [1,[QF2, D3]]               # Qf+D
    # SGHm:                [1,[D3, QD2, QD2, D3]]      # D+QD+QD+D
    # SGHf:                [1,[D3, QF2]]               # D+QF
# LE gaps
    # GAPL:                [1,[DGAP1,RFG1,DGAP1]]   # D+G+D sandwich
    # GAPLarr:             [10,[GAPL]]
# HE gaps
    # GAPH:                [1,[DGAP2,RFG2,DGAP2]]   # D+G+D sandwich
    # GAPHarr:             [10,[GAPH]]
# ===========================================================================================
CELLS:    
    NIL_CELL:    [1,[]]
    CELL:        [1,[D,QF,Psp,D,QD,Psp]]     # D-QF-D-QD
# group SEGMENTS into CELLs: order given by list [...] syntax
#...........................................................................................
    # LE_CELL:   [1,[SGLi, GAPLarr, D10, GAPLarr, SGLm, GAPLarr, D10, GAPLarr, SGLf]] 
    # HE-CELL:   [1,[SGHi, GAPHarr, D10, GAPHarr, SGHm, GAPHarr, D10, GAPHarr, SGHf]] 
# ===========================================================================================
SECTIONS:
    NIL_SEC:    [1,[]]
# group CELLs into SECTIONS
#...........................................................................................
    # SECL:      [25,[LE_CELL]]
    # SECH:      [127,[HE-CELL]]
# ===========================================================================================
LATTICE:    
# group SECTIONs into a LINE a.k.a. LATTICE
#........................................................................................... 
    LINE:   [1,[CELL]]
 